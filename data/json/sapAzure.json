{"name":"sap-azure","title":"SAP Microsoft Azure compliance profile","maintainer":"SAP Multi-Cloud Security","copyright":"SAP Multi-Cloud Security","copyright_email":"DL_5FA91E5D1DFE00027E55AD91@global.corp.sap","license":"Apache-2.0","summary":"SAP Microsoft Azure compliance profile","version":"4.19.0","supports":[{"platform":"azure"}],"depends":[{"name":"inspec-azure","url":"https://github.com/inspec/inspec-azure/archive/v1.118.1.tar.gz","status":"loaded"}],"controls":[{"title":"2.2 - Azure subscriptions with custom roles should not be overly permissive","desc":"This policy identifies Azure subscriptions with custom roles are overly permissive.\n  Instead of allowing full administrative access Least privilege access rule should be followed and only necessary privileges should be given","descriptions":{"default":"This policy identifies Azure subscriptions with custom roles are overly permissive.\n  Instead of allowing full administrative access Least privilege access rule should be followed and only necessary privileges should be given"},"impact":0.5,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_role_definition\" \"example_role_definition\" {\n    ...\n    permissions {\n      actions     = <limited list of actions>\n    }\n    assignable_scopes = <limited list of scopes>\n  }\n\n","tested_tf_version":"1.0.11","remediation_steps":"  Check the usage of the role identified and before deleting, check the impact that may be caused by deleting the role. We can't create, update or delete custom roles through the Azure console.\n  Use below CLI command to delete the role:\n\n  az role definition delete --name \"\"rolename\"\"\n"},"code":"control '2_02_subscriptions_roles_overly_permissive' do\r\n  title '2.2 - Azure subscriptions with custom roles should not be overly permissive'\r\n  impact 0.5\r\n  desc 'This policy identifies Azure subscriptions with custom roles are overly permissive.\r\n  Instead of allowing full administrative access Least privilege access rule should be followed and only necessary privileges should be given'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_role_definition\" \"example_role_definition\" {\r\n    ...\r\n    permissions {\r\n      actions     = <limited list of actions>\r\n    }\r\n    assignable_scopes = <limited list of scopes>\r\n  }\r\n\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  Check the usage of the role identified and before deleting, check the impact that may be caused by deleting the role. We can't create, update or delete custom roles through the Azure console.\r\n  Use below CLI command to delete the role:\r\n\r\n  az role definition delete --name \\\"\"rolename\\\"\"\r\n  EOF\r\n\r\n  azure_role_definitions.where { type == 'CustomRole' }.names.each do |role_def|\r\n    next if role_def == 'd54218c0-97a8-5da8-a483-66a7f7adede9' # Orca role excluded for Shared Tenant.\r\n    next if role_def == 'c702c0ca-1bd9-4353-9f91-6ec883b6ee6d' # Orca role excluded for Corporate Tenant.\r\n    next if role_def == '0b1d2aa3-cbdf-55b8-ad7a-8be9238ff18c' # Orca role excluded for Accenture Tenant.\r\n    next if role_def == '7e9ba4f8-bf8f-4e5d-af02-edc63dc1e801' # Multicloud Security Containment role for Shared tenant\r\n    next if role_def == '41460f83-da15-4fcb-bf6c-921700d4f3be' # Multicloud Security Containment role for Corporate tenant\r\n    next if role_def == '2e8dfdfb-bf5e-4333-9a94-f4af2bcf4dd5' # Orca role excluded for Azure China SAPCN Tenant.\r\n    next if role_def == '1545804c-a7eb-46dd-9061-900047f8d26e' # Orca role excluded for Azure China CDC Tenant.\r\n\r\n    role_definition = azure_role_definition(name: role_def)\r\n    next if role_definition.permissions_allowed.nil? || role_definition.assignable_scopes.nil?\r\n\r\n    describe \"All permissions allowed for role definition ID #{role_def}\" do\r\n      subject do\r\n        permissions = role_definition.permissions_allowed\r\n        allow_all_permissions = permissions.select do |permission|\r\n          next if permission.eql?('*/read')\r\n\r\n          permission.match?(/^\\*/)\r\n        end\r\n        allow_all_permissions.count\r\n      end\r\n      it { should be_zero }\r\n    end\r\n    describe \"All scopes allowed for role definition ID #{role_def}\" do\r\n      subject do\r\n        scopes = role_definition.assignable_scopes\r\n        allow_all_scopes = scopes.select do |scope|\r\n          scope.eql?('/')\r\n        end\r\n        allow_all_scopes.count\r\n      end\r\n      it { should be_zero }\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/2_02.rb","line":1},"id":"2_02_subscriptions_roles_overly_permissive"},{"title":"3.2 - Azure Storage account queues logging must be enabled","desc":"Storage Account Logging generates a log that contains access records for each request made to a storage bucket. By enabling Storage Account Logging on all storage accounts, it is possible to capture all events which may affect objects within a target bucket. The log information can be useful in security and incident response workflows. Storage Account Logging MUST be enabled for all storage account queues","descriptions":{"default":"Storage Account Logging generates a log that contains access records for each request made to a storage bucket. By enabling Storage Account Logging on all storage accounts, it is possible to capture all events which may affect objects within a target bucket. The log information can be useful in security and incident response workflows. Storage Account Logging MUST be enabled for all storage account queues"},"impact":0.8,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_monitor_diagnostic_setting\" \"example_queue_diagnostic\" {\n    name                       = <name of your diagnostic settings>\n    target_resource_id         = \"<storage account id>/queueServices/default/\"\n    storage_account_id         = <name of the storage account where the logs will be stored>\n    log {\n      category = \"StorageRead\"\n      enabled  = true\n    }\n    log {\n      category = \"StorageWrite\"\n      enabled  = true\n    }\n    log {\n      category = \"StorageDelete\"\n      enabled  = true\n      }\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  1.  Log in to your Azure Subscription, in which the alert exists.\n  2.  In the search bar search for storage accounts > click on the resource, for which there is an alert.\n  3.  In the Monitoring section on left hand side, click Diagnostic settings.\n  4.  Choose queue as the type of storage that you want to enable logs for.\n  5.  Click Add diagnostic setting.\n  6.  In the Name field of the page, enter a name for this Resource log setting. Then, select StorageRead, StorageWrite, and StorageDelete checkboxes, and where you want the logs to be sent.\n"},"code":"control '3_02_storage_account_queues_logging' do\r\n  title '3.2 - Azure Storage account queues logging must be enabled'\r\n  impact 0.8\r\n  desc 'Storage Account Logging generates a log that contains access records for each request made to a storage bucket. By enabling Storage Account Logging on all storage accounts, it is possible to capture all events which may affect objects within a target bucket. The log information can be useful in security and incident response workflows. Storage Account Logging MUST be enabled for all storage account queues'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_monitor_diagnostic_setting\" \"example_queue_diagnostic\" {\r\n    name                       = <name of your diagnostic settings>\r\n    target_resource_id         = \"<storage account id>/queueServices/default/\"\r\n    storage_account_id         = <name of the storage account where the logs will be stored>\r\n    log {\r\n      category = \"StorageRead\"\r\n      enabled  = true\r\n    }\r\n    log {\r\n      category = \"StorageWrite\"\r\n      enabled  = true\r\n    }\r\n    log {\r\n      category = \"StorageDelete\"\r\n      enabled  = true\r\n      }\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription, in which the alert exists.\r\n  2.  In the search bar search for storage accounts > click on the resource, for which there is an alert.\r\n  3.  In the Monitoring section on left hand side, click Diagnostic settings.\r\n  4.  Choose queue as the type of storage that you want to enable logs for.\r\n  5.  Click Add diagnostic setting.\r\n  6.  In the Name field of the page, enter a name for this Resource log setting. Then, select StorageRead, StorageWrite, and StorageDelete checkboxes, and where you want the logs to be sent.\r\n  EOF\r\n  azure_storage_accounts.entries.each do |azure_storage_account_data|\r\n    storage_account = azure_storage_account(resource_data: azure_storage_account_data)\r\n    next if storage_account.properties.primaryEndpoints.queue.nil?\r\n    next if storage_account.properties.primaryEndpoints.queue.match?(/core.chinacloudapi.cn/)\r\n    next if storage_account.kind == 'BlobStorage' # skips legacy storage account type which only allows blob types\r\n    next if storage_account.tags.include?('application' => 'databricks') && storage_account.tags.include?('databricks-environment' => 'true') # adds exclusion for storage accounts managed by Azure Databricks\r\n    next unless storage_account.exists?\r\n\r\n    describe \"Azure Storage Account #{storage_account.name}\" do\r\n      subject { storage_account }\r\n      it { should have_queues_read_log_enabled }\r\n      it { should have_queues_write_log_enabled }\r\n      it { should have_queues_delete_log_enabled }\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/3_02.rb","line":1},"id":"3_02_storage_account_queues_logging"},{"title":"3.2 - Azure Storage account blobs logging must be enabled","desc":"Storage Account Logging generates a log that contains access records for each request made to a storage bucket. By enabling Storage Account Logging on all storage accounts, it is possible to capture all events which may affect objects within a target bucket. The log information can be useful in security and incident response workflows. Storage Account Logging MUST be enabled for all storage account blobs","descriptions":{"default":"Storage Account Logging generates a log that contains access records for each request made to a storage bucket. By enabling Storage Account Logging on all storage accounts, it is possible to capture all events which may affect objects within a target bucket. The log information can be useful in security and incident response workflows. Storage Account Logging MUST be enabled for all storage account blobs"},"impact":0.8,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_monitor_diagnostic_setting\" \"example_blob_diagnostic\" {\n    name                       = <name of your diagnostic settings>\n    target_resource_id         = \"<storage account id>/blobServices/default/\"\n    storage_account_id         = <name of the storage account where the logs will be stored>\n    log {\n      category = \"StorageRead\"\n      enabled  = true\n    }\n    log {\n      category = \"StorageWrite\"\n      enabled  = true\n    }\n    log {\n      category = \"StorageDelete\"\n      enabled  = true\n    }\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  1.  Log in to your Azure Subscription, in which the alert exists.\n  2.  In the search bar search for storage accounts > click on the resource, for which there is an alert.\n  3.  In the Monitoring section on left hand side, click Diagnostic settings.\n  4.  Choose blob as the type of storage that you want to enable logs for.\n  5.  Click Add diagnostic setting.\n  6.  In the Name field of the page, enter a name for this Resource log setting. Then, select StorageRead, StorageWrite, and StorageDelete checkboxes, and where you want the logs to be sent.\n"},"code":"control '3_02_storage_account_blobs_logging' do\r\n  title '3.2 - Azure Storage account blobs logging must be enabled'\r\n  impact 0.8\r\n  desc 'Storage Account Logging generates a log that contains access records for each request made to a storage bucket. By enabling Storage Account Logging on all storage accounts, it is possible to capture all events which may affect objects within a target bucket. The log information can be useful in security and incident response workflows. Storage Account Logging MUST be enabled for all storage account blobs'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_monitor_diagnostic_setting\" \"example_blob_diagnostic\" {\r\n    name                       = <name of your diagnostic settings>\r\n    target_resource_id         = \"<storage account id>/blobServices/default/\"\r\n    storage_account_id         = <name of the storage account where the logs will be stored>\r\n    log {\r\n      category = \"StorageRead\"\r\n      enabled  = true\r\n    }\r\n    log {\r\n      category = \"StorageWrite\"\r\n      enabled  = true\r\n    }\r\n    log {\r\n      category = \"StorageDelete\"\r\n      enabled  = true\r\n    }\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription, in which the alert exists.\r\n  2.  In the search bar search for storage accounts > click on the resource, for which there is an alert.\r\n  3.  In the Monitoring section on left hand side, click Diagnostic settings.\r\n  4.  Choose blob as the type of storage that you want to enable logs for.\r\n  5.  Click Add diagnostic setting.\r\n  6.  In the Name field of the page, enter a name for this Resource log setting. Then, select StorageRead, StorageWrite, and StorageDelete checkboxes, and where you want the logs to be sent.\r\n  EOF\r\n\r\n  azure_storage_accounts.entries.each do |azure_storage_account_data|\r\n    storage_account = azure_storage_account(resource_data: azure_storage_account_data)\r\n    next if storage_account.properties.primaryEndpoints.blob.nil?\r\n    next if storage_account.properties.primaryEndpoints.blob.match?(/core.chinacloudapi.cn/)\r\n    next if storage_account.tags.include?('application' => 'databricks') && storage_account.tags.include?('databricks-environment' => 'true') # adds exclusion for storage accounts managed by Azure Databricks\r\n    next unless storage_account.exists?\r\n\r\n    describe \"Azure Storage Account #{storage_account.name}\" do\r\n      subject { storage_account }\r\n      it { should have_blobs_read_log_enabled }\r\n      it { should have_blobs_write_log_enabled }\r\n      it { should have_blobs_delete_log_enabled }\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/3_02.rb","line":52},"id":"3_02_storage_account_blobs_logging"},{"title":"3.2 - Azure Storage account tables logging must be enabled","desc":"Storage Account Logging generates a log that contains access records for each request made to a storage bucket. By enabling Storage Account Logging on all storage accounts, it is possible to capture all events which may affect objects within a target bucket. The log information can be useful in security and incident response workflows. Storage Account Logging MUST be enabled for all storage account tables","descriptions":{"default":"Storage Account Logging generates a log that contains access records for each request made to a storage bucket. By enabling Storage Account Logging on all storage accounts, it is possible to capture all events which may affect objects within a target bucket. The log information can be useful in security and incident response workflows. Storage Account Logging MUST be enabled for all storage account tables"},"impact":0.8,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_monitor_diagnostic_setting\" \"example_table_diagnostic\" {\n    name                       = <name of your diagnostic settings>\n    target_resource_id         = \"<storage account id>/tableServices/default/\"\n    storage_account_id         = <name of the storage account where the logs will be stored>\n    log {\n      category = \"StorageRead\"\n      enabled  = true\n    }\n    log {\n      category = \"StorageWrite\"\n      enabled  = true\n    }\n    log {\n      category = \"StorageDelete\"\n      enabled  = true\n    }\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  1.  Log in to your Azure Subscription, in which the alert exists.\n  2.  In the search bar search for storage accounts > click on the resource, for which there is an alert.\n  3.  In the Monitoring section on left hand side, click Diagnostic settings.\n  4.  Choose table as the type of storage that you want to enable logs for.\n  5.  Click Add diagnostic setting.\n  6.  In the Name field of the page, enter a name for this Resource log setting. Then, select StorageRead, StorageWrite, and StorageDelete checkboxes, and where you want the logs to be sent.\n"},"code":"control '3_02_storage_account_tables_logging' do\r\n  title '3.2 - Azure Storage account tables logging must be enabled'\r\n  impact 0.8\r\n  desc 'Storage Account Logging generates a log that contains access records for each request made to a storage bucket. By enabling Storage Account Logging on all storage accounts, it is possible to capture all events which may affect objects within a target bucket. The log information can be useful in security and incident response workflows. Storage Account Logging MUST be enabled for all storage account tables'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_monitor_diagnostic_setting\" \"example_table_diagnostic\" {\r\n    name                       = <name of your diagnostic settings>\r\n    target_resource_id         = \"<storage account id>/tableServices/default/\"\r\n    storage_account_id         = <name of the storage account where the logs will be stored>\r\n    log {\r\n      category = \"StorageRead\"\r\n      enabled  = true\r\n    }\r\n    log {\r\n      category = \"StorageWrite\"\r\n      enabled  = true\r\n    }\r\n    log {\r\n      category = \"StorageDelete\"\r\n      enabled  = true\r\n    }\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription, in which the alert exists.\r\n  2.  In the search bar search for storage accounts > click on the resource, for which there is an alert.\r\n  3.  In the Monitoring section on left hand side, click Diagnostic settings.\r\n  4.  Choose table as the type of storage that you want to enable logs for.\r\n  5.  Click Add diagnostic setting.\r\n  6.  In the Name field of the page, enter a name for this Resource log setting. Then, select StorageRead, StorageWrite, and StorageDelete checkboxes, and where you want the logs to be sent.\r\n  EOF\r\n\r\n  azure_storage_accounts.entries.each do |azure_storage_account_data|\r\n    storage_account = azure_storage_account(resource_data: azure_storage_account_data)\r\n    next if storage_account.properties.primaryEndpoints.table.nil?\r\n    next if storage_account.properties.primaryEndpoints.table.match?(/core.chinacloudapi.cn/)\r\n    next if storage_account.kind == 'BlobStorage' # skips legacy storage account type which only allows blob types\r\n    next if storage_account.tags.include?('application' => 'databricks') && storage_account.tags.include?('databricks-environment' => 'true') # adds exclusion for storage accounts managed by Azure Databricks\r\n    next unless storage_account.exists?\r\n\r\n    describe \"Azure Storage Account #{storage_account.name}\" do\r\n      subject { storage_account }\r\n      it { should have_tables_read_log_enabled }\r\n      it { should have_tables_write_log_enabled }\r\n      it { should have_tables_delete_log_enabled }\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/3_02.rb","line":103},"id":"3_02_storage_account_tables_logging"},{"title":"3.3 - Azure SQL auditing must be enabled","desc":"Audit logs can help you find suspicious events, unusual activity, and trends to analyze database events. Auditing the SQL Server, at the server-level,\n  enables you to track all new and existing databases on the server. This policy identifies SQL servers/databases which do not have auditing enabled. As a best practice,\n  enable auditing on each SQL server so that the database are audited, regardless of the database auditing settings.","descriptions":{"default":"Audit logs can help you find suspicious events, unusual activity, and trends to analyze database events. Auditing the SQL Server, at the server-level,\n  enables you to track all new and existing databases on the server. This policy identifies SQL servers/databases which do not have auditing enabled. As a best practice,\n  enable auditing on each SQL server so that the database are audited, regardless of the database auditing settings."},"impact":0.8,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_mssql_database_extended_auditing_policy\" \"example_auditing_policy\" {\n    database_id                             = <your database id>\n    storage_endpoint                        = <your storage account endpoint>\n    storage_account_access_key              = <your storage account access key>\n    ...\n  }\n  resource \"azurerm_mssql_server_extended_auditing_policy\" \"example_server_auditing_policy\" {\n    server_id                  = <your server id>\n    storage_endpoint           = <your storage account endpoint>\n    storage_account_access_key = <your storage account access key>\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  1.  Log in to your Azure Subscription, in which the alert exists.\n  2.  In the search bar search for SQL servers/databases > click on the resource, for which there is an alert.\n  3.  On left hand side under Security heading, click Auditing > Set the Enable Azure SQL Auditing parameter.\n  4.  Click on Save.\n"},"code":"control '3_03_sql_auditing_enablement' do\r\n  title '3.3 - Azure SQL auditing must be enabled'\r\n  impact 0.8\r\n  desc 'Audit logs can help you find suspicious events, unusual activity, and trends to analyze database events. Auditing the SQL Server, at the server-level,\r\n  enables you to track all new and existing databases on the server. This policy identifies SQL servers/databases which do not have auditing enabled. As a best practice,\r\n  enable auditing on each SQL server so that the database are audited, regardless of the database auditing settings.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_mssql_database_extended_auditing_policy\" \"example_auditing_policy\" {\r\n    database_id                             = <your database id>\r\n    storage_endpoint                        = <your storage account endpoint>\r\n    storage_account_access_key              = <your storage account access key>\r\n    ...\r\n  }\r\n  resource \"azurerm_mssql_server_extended_auditing_policy\" \"example_server_auditing_policy\" {\r\n    server_id                  = <your server id>\r\n    storage_endpoint           = <your storage account endpoint>\r\n    storage_account_access_key = <your storage account access key>\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription, in which the alert exists.\r\n  2.  In the search bar search for SQL servers/databases > click on the resource, for which there is an alert.\r\n  3.  On left hand side under Security heading, click Auditing > Set the Enable Azure SQL Auditing parameter.\r\n  4.  Click on Save.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_sql_servers(resource_group: resource_group).names.each do |sql_server|\r\n      az_sql_server = azure_sql_server(resource_group: resource_group, name: sql_server)\r\n      if az_sql_server.auditing_settings.properties.state == 'Enabled'\r\n        describe az_sql_server do\r\n          its('auditing_settings.properties.state') { should cmp 'Enabled' }\r\n        end\r\n      else\r\n        azure_sql_databases(resource_group: resource_group, server_name: sql_server).names.each do |sql_databse|\r\n          az_sql_database = azure_sql_database(resource_group: resource_group, server_name: sql_server, name: sql_databse)\r\n          next if az_sql_database.name == 'master'\r\n          next unless az_sql_database.exists?\r\n\r\n          describe az_sql_database do\r\n            its('auditing_settings.properties.state') { should cmp 'Enabled' }\r\n          end\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/3_03.rb","line":1},"id":"3_03_sql_auditing_enablement"},{"title":"3.3 - Azure SQL auditing retention must be enabled for at least 180 days","desc":"Audit Logs can help you find suspicious events, unusual activity, and trends. Auditing the SQL server, at the server-level, allows you to track all existing and\n  newly created databases on the instance. This policy identifies SQL servers which do not retain audit logs for more than 180 days. As a best practice,\n  configure the audit logs retention time period to be at least 180 days.","descriptions":{"default":"Audit Logs can help you find suspicious events, unusual activity, and trends. Auditing the SQL server, at the server-level, allows you to track all existing and\n  newly created databases on the instance. This policy identifies SQL servers which do not retain audit logs for more than 180 days. As a best practice,\n  configure the audit logs retention time period to be at least 180 days."},"impact":0.8,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_mssql_server_extended_auditing_policy\" \"example_server_auditing_policy\" {\n    ...\n    retention_in_days = <180 or more>\n  }\n  resource \"azurerm_mssql_database_extended_auditing_policy\" \"example_auditing_policy\" {\n    ...\n    retention_in_days = <180 or more>\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  SQL Server (Prefered)\n  1.  Log into your Azure Subscription, in which the alert exists.\n  2.  In the search bar search for SQL servers > click on the resource, for which there is an alert.\n  3.  On left hand side under Security heading, click Auditing > click on Advanced properties under Storage > Set Retention days to greater than or equal to 180 days.\n  4.  Click on Save.\n  SQL Database\n  1.  Log in to your Azure Subscription, in which the alert exists.\n  2.  In the search bar search for SQL databases > click on the resource, for which there is an alert.\n  3.  On left hand side under Security heading, click Auditing > click on Advanced properties under Storage > Set Retention days to greater than or equal to 180 days.\n  4.  Click on Save.\n"},"code":"control '3_03_sql_auditing_retention' do\r\n  title '3.3 - Azure SQL auditing retention must be enabled for at least 180 days'\r\n  impact 0.8\r\n  desc 'Audit Logs can help you find suspicious events, unusual activity, and trends. Auditing the SQL server, at the server-level, allows you to track all existing and\r\n  newly created databases on the instance. This policy identifies SQL servers which do not retain audit logs for more than 180 days. As a best practice,\r\n  configure the audit logs retention time period to be at least 180 days.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_mssql_server_extended_auditing_policy\" \"example_server_auditing_policy\" {\r\n    ...\r\n    retention_in_days = <180 or more>\r\n  }\r\n  resource \"azurerm_mssql_database_extended_auditing_policy\" \"example_auditing_policy\" {\r\n    ...\r\n    retention_in_days = <180 or more>\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  SQL Server (Prefered)\r\n  1.  Log into your Azure Subscription, in which the alert exists.\r\n  2.  In the search bar search for SQL servers > click on the resource, for which there is an alert.\r\n  3.  On left hand side under Security heading, click Auditing > click on Advanced properties under Storage > Set Retention days to greater than or equal to 180 days.\r\n  4.  Click on Save.\r\n  SQL Database\r\n  1.  Log in to your Azure Subscription, in which the alert exists.\r\n  2.  In the search bar search for SQL databases > click on the resource, for which there is an alert.\r\n  3.  On left hand side under Security heading, click Auditing > click on Advanced properties under Storage > Set Retention days to greater than or equal to 180 days.\r\n  4.  Click on Save.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_sql_servers(resource_group: resource_group).names.each do |sql_server|\r\n      az_sql_server = azure_sql_server(resource_group: resource_group, name: sql_server)\r\n      if az_sql_server.auditing_settings.properties.state == 'Enabled'\r\n        describe az_sql_server do\r\n          its('auditing_settings.properties.retentionDays') { should be >= 180 }\r\n        end\r\n      else\r\n        azure_sql_databases(resource_group: resource_group, server_name: sql_server).names.each do |sql_databse|\r\n          az_sql_database = azure_sql_database(resource_group: resource_group, server_name: sql_server, name: sql_databse)\r\n          next if az_sql_database.name == 'master'\r\n          next unless az_sql_database.exists?\r\n\r\n          describe az_sql_database do\r\n            its('auditing_settings.properties.retentionDays') { should be >= 180 }\r\n          end\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/3_03.rb","line":52},"id":"3_03_sql_auditing_retention"},{"title":"3.3 - Azure SQL Threat Detection should be enabled","desc":"Microsoft Defender for SQL is a Defender plan in Microsoft Defender for Cloud. Microsoft Defender for SQL provides a set of advanced SQL security capabilities, including SQL Vulnerability Assessment and Advanced Threat Protection.\n  This policy identifies Azure SQL Servers that disabled the threat protection/detection. To protect your SQL Servers, as a best practice, have threat detection/protection by enabling Microsoft Defender for SQL.","descriptions":{"default":"Microsoft Defender for SQL is a Defender plan in Microsoft Defender for Cloud. Microsoft Defender for SQL provides a set of advanced SQL security capabilities, including SQL Vulnerability Assessment and Advanced Threat Protection.\n  This policy identifies Azure SQL Servers that disabled the threat protection/detection. To protect your SQL Servers, as a best practice, have threat detection/protection by enabling Microsoft Defender for SQL."},"impact":0.5,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_mssql_server_security_alert_policy\" \"example_server_alert\" {\n    state                      = 'Enabled'\n    ...\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  1.  Log in to the Azure portal.\n  2.  Click SQL Servers > select the SQL Server you need to change.\n  3.  In left panel under Security -> Click Microsoft Defender for Cloud.\n  4.  Click \"Enable Microsoft Defender for SQL\" button.\n      Reference: https://docs.microsoft.com/en-us/azure/azure-sql/database/azure-defender-for-sql?view=azuresql\n"},"code":"control '3_03_sql_threat_detection_enablement_misconfigured' do\r\n  title '3.3 - Azure SQL Threat Detection should be enabled'\r\n  impact 0.5\r\n  desc 'Microsoft Defender for SQL is a Defender plan in Microsoft Defender for Cloud. Microsoft Defender for SQL provides a set of advanced SQL security capabilities, including SQL Vulnerability Assessment and Advanced Threat Protection.\r\n  This policy identifies Azure SQL Servers that disabled the threat protection/detection. To protect your SQL Servers, as a best practice, have threat detection/protection by enabling Microsoft Defender for SQL.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_mssql_server_security_alert_policy\" \"example_server_alert\" {\r\n    state                      = 'Enabled'\r\n    ...\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to the Azure portal.\r\n  2.  Click SQL Servers > select the SQL Server you need to change.\r\n  3.  In left panel under Security -> Click Microsoft Defender for Cloud.\r\n  4.  Click \"Enable Microsoft Defender for SQL\" button.\r\n      Reference: https://docs.microsoft.com/en-us/azure/azure-sql/database/azure-defender-for-sql?view=azuresql\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_sql_servers(resource_group: resource_group).names.each do |sql_server|\r\n      describe azure_sql_server(resource_group: resource_group, name: sql_server) do\r\n        its('threat_detection_settings.properties.state') { should cmp 'Enabled' }\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/3_03.rb","line":106},"id":"3_03_sql_threat_detection_enablement_misconfigured"},{"title":"3.3 - Azure PostgreSQL database server with log checkpoints parameter should be enabled","desc":"This policy enforces that log checkpoints server parameter for PostgreSQL database servers is enabled.\n  Enabling this parameter helps to log each checkpoint and generate query and error logs. This query and logs can be used to\n  identify and troubleshoot configuration errors and sub-optimal performance.","descriptions":{"default":"This policy enforces that log checkpoints server parameter for PostgreSQL database servers is enabled.\n  Enabling this parameter helps to log each checkpoint and generate query and error logs. This query and logs can be used to\n  identify and troubleshoot configuration errors and sub-optimal performance."},"impact":0.5,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_postgresql_configuration\" \"example_postgreserver_config\" {\n    ...\n    name                = 'log_checkpoints'\n    value               = 'on'\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  1.  Log in to your Azure Subscription, in which the alert exists.\n  2.  In the search bar search for Azure Database for PostgreSQL servers > click on the resource, for which there is an alert.\n  3.  Navigate to Server parameters, which you will see on the left hand side.\n  4.  Locate log_checkpoints > click On.\n  5.  Click on Save.\n"},"code":"control '3_03_postgres_server_log_checkpoints' do\r\n  title '3.3 - Azure PostgreSQL database server with log checkpoints parameter should be enabled'\r\n  impact 0.5\r\n  desc 'This policy enforces that log checkpoints server parameter for PostgreSQL database servers is enabled.\r\n  Enabling this parameter helps to log each checkpoint and generate query and error logs. This query and logs can be used to\r\n  identify and troubleshoot configuration errors and sub-optimal performance.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_postgresql_configuration\" \"example_postgreserver_config\" {\r\n    ...\r\n    name                = 'log_checkpoints'\r\n    value               = 'on'\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription, in which the alert exists.\r\n  2.  In the search bar search for Azure Database for PostgreSQL servers > click on the resource, for which there is an alert.\r\n  3.  Navigate to Server parameters, which you will see on the left hand side.\r\n  4.  Locate log_checkpoints > click On.\r\n  5.  Click on Save.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_postgresql_servers(resource_group: resource_group).names.each do |postgres_server|\r\n      describe azure_postgresql_server(resource_group: resource_group, name: postgres_server) do\r\n        its('configurations.log_checkpoints.properties.value') { should cmp 'on' }\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/3_03.rb","line":137},"id":"3_03_postgres_server_log_checkpoints"},{"title":"3.3 - Azure PostgreSQL database server with log disconnections parameter should be enabled","desc":"This policy enforces that log disconnections server parameter for PostgreSQL database servers is enabled.\n  Enabling this parameter helps to log each end of the session to generate query and error logs. This query and logs can be used to\n  identify and troubleshoot configuration errors and sub-optimal performance.","descriptions":{"default":"This policy enforces that log disconnections server parameter for PostgreSQL database servers is enabled.\n  Enabling this parameter helps to log each end of the session to generate query and error logs. This query and logs can be used to\n  identify and troubleshoot configuration errors and sub-optimal performance."},"impact":0.5,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_postgresql_configuration\" \"example_postgreserver_config\" {\n    ...\n    name                = 'log_disconnections'\n    value               = 'on'\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  1.  Log in to your Azure Subscription, in which the alert exists.\n  2.  In the search bar search for Azure Database for PostgreSQL servers > click on the resource, for which there is an alert.\n  3.  Navigate to Server parameters, which you will see on the left hand side.\n  4.  Locate log_disconnections > click On.\n  5.  Click on Save.\n"},"code":"control '3_03_postgres_server_log_disconnections' do\r\n  title '3.3 - Azure PostgreSQL database server with log disconnections parameter should be enabled'\r\n  impact 0.5\r\n  desc 'This policy enforces that log disconnections server parameter for PostgreSQL database servers is enabled.\r\n  Enabling this parameter helps to log each end of the session to generate query and error logs. This query and logs can be used to\r\n  identify and troubleshoot configuration errors and sub-optimal performance.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_postgresql_configuration\" \"example_postgreserver_config\" {\r\n    ...\r\n    name                = 'log_disconnections'\r\n    value               = 'on'\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription, in which the alert exists.\r\n  2.  In the search bar search for Azure Database for PostgreSQL servers > click on the resource, for which there is an alert.\r\n  3.  Navigate to Server parameters, which you will see on the left hand side.\r\n  4.  Locate log_disconnections > click On.\r\n  5.  Click on Save.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_postgresql_servers(resource_group: resource_group).names.each do |postgres_server|\r\n      describe azure_postgresql_server(resource_group: resource_group, name: postgres_server) do\r\n        its('configurations.log_disconnections.properties.value') { should cmp 'on' }\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/3_03.rb","line":170},"id":"3_03_postgres_server_log_disconnections"},{"title":"3.3 - Azure PostgreSQL database server with log duration parameter should be enabled","desc":"This policy enforces that log duration server parameter for PostgreSQL database servers is enabled.\n  Enabling this parameter helps to log time needed to complete each SQL query to generate query and error logs. This query and logs can be used to\n  identify and troubleshoot configuration errors and sub-optimal performance.","descriptions":{"default":"This policy enforces that log duration server parameter for PostgreSQL database servers is enabled.\n  Enabling this parameter helps to log time needed to complete each SQL query to generate query and error logs. This query and logs can be used to\n  identify and troubleshoot configuration errors and sub-optimal performance."},"impact":0.5,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_postgresql_configuration\" \"example_postgreserver_config\" {\n    ...\n    name                = 'log_duration'\n    value               = 'on'\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  1.  Log in to your Azure Subscription, in which the alert exists.\n  2.  In the search bar search for Azure Database for PostgreSQL servers > click on the resource, for which there is an alert.\n  3.  Navigate to Server parameters, which you will see on the left hand side.\n  4.  Locate log_duration > click On.\n  5.  Click on Save.\n"},"code":"control '3_03_postgres_server_log_duration' do\r\n  title '3.3 - Azure PostgreSQL database server with log duration parameter should be enabled'\r\n  impact 0.5\r\n  desc 'This policy enforces that log duration server parameter for PostgreSQL database servers is enabled.\r\n  Enabling this parameter helps to log time needed to complete each SQL query to generate query and error logs. This query and logs can be used to\r\n  identify and troubleshoot configuration errors and sub-optimal performance.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_postgresql_configuration\" \"example_postgreserver_config\" {\r\n    ...\r\n    name                = 'log_duration'\r\n    value               = 'on'\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription, in which the alert exists.\r\n  2.  In the search bar search for Azure Database for PostgreSQL servers > click on the resource, for which there is an alert.\r\n  3.  Navigate to Server parameters, which you will see on the left hand side.\r\n  4.  Locate log_duration > click On.\r\n  5.  Click on Save.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_postgresql_servers(resource_group: resource_group).names.each do |postgres_server|\r\n      describe azure_postgresql_server(resource_group: resource_group, name: postgres_server) do\r\n        its('configurations.log_duration.properties.value') { should cmp 'on' }\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/3_03.rb","line":203},"id":"3_03_postgres_server_log_duration"},{"title":"3.3 - Azure PostgreSQL database server with log connections parameter should be enabled","desc":"This policy enforces that log connection server parameter for PostgreSQL database servers is enabled.\n  Enabling this parameter helps to log attempted connection to the server, as well as successful completion of client authentication\n  to generate query and error logs. This query and logs can be used to identify and troubleshoot configuration errors and sub-optimal performance.","descriptions":{"default":"This policy enforces that log connection server parameter for PostgreSQL database servers is enabled.\n  Enabling this parameter helps to log attempted connection to the server, as well as successful completion of client authentication\n  to generate query and error logs. This query and logs can be used to identify and troubleshoot configuration errors and sub-optimal performance."},"impact":0.5,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_postgresql_configuration\" \"example_postgreserver_config\" {\n    ...\n    name                = 'log_connections'\n    value               = 'on'\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  1.  Log in to your Azure Subscription, in which the alert exists.\n  2.  In the search bar search for Azure Database for PostgreSQL servers > click on the resource for which there is an alert.\n  3.  Navigate to Server parameters, which you will see on the left hand side.\n  4.  Locate log_connections > click On.\n  5.  Click on Save.\n"},"code":"control '3_03_postgres_server_log_connections' do\r\n  title '3.3 - Azure PostgreSQL database server with log connections parameter should be enabled'\r\n  impact 0.5\r\n  desc 'This policy enforces that log connection server parameter for PostgreSQL database servers is enabled.\r\n  Enabling this parameter helps to log attempted connection to the server, as well as successful completion of client authentication\r\n  to generate query and error logs. This query and logs can be used to identify and troubleshoot configuration errors and sub-optimal performance.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_postgresql_configuration\" \"example_postgreserver_config\" {\r\n    ...\r\n    name                = 'log_connections'\r\n    value               = 'on'\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription, in which the alert exists.\r\n  2.  In the search bar search for Azure Database for PostgreSQL servers > click on the resource for which there is an alert.\r\n  3.  Navigate to Server parameters, which you will see on the left hand side.\r\n  4.  Locate log_connections > click On.\r\n  5.  Click on Save.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_postgresql_servers(resource_group: resource_group).names.each do |postgres_server|\r\n      describe azure_postgresql_server(resource_group: resource_group, name: postgres_server) do\r\n        its('configurations.log_connections.properties.value') { should cmp 'on' }\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/3_03.rb","line":236},"id":"3_03_postgres_server_log_connections"},{"title":"3.4 - Azure Key Vault audit logging must be enabled","desc":"This policy identifies Azure Key Vault instances for which audit logging is disabled.\n  As a best practice, enable audit event logging for Key Vault instances to monitor how\n  and when your key vaults are accessed, and by whom.","descriptions":{"default":"This policy identifies Azure Key Vault instances for which audit logging is disabled.\n  As a best practice, enable audit event logging for Key Vault instances to monitor how\n  and when your key vaults are accessed, and by whom."},"impact":0.8,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_monitor_diagnostic_setting\" \"example_keyvault_log\" {\n    ...\n    target_resource_id = <your key vault id>\n    log {\n      category = \"AuditEvent\"\n      enabled  = true\n      ...\n    }\n    metric {\n      category = \"AllMetrics\"\n      enabled  = true\n      ...\n    }\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  1.  Log in to Azure portal.\n  2.  Click on Resources > find or search for the resource in question.\n  3.  Click on the name of key vault you want to modify > click Diagnostic settings > click Add diagnostic setting.\n  4.  Enter a name for the log > Click Archive to a storage account > select the relevant storage account to save the logs to.\n  5.  Under Log, select AuditEvent > set the Retention time frame.\n  6.  Click on Save.\n"},"code":"control '3_04_key_vault_logging' do\r\n  title '3.4 - Azure Key Vault audit logging must be enabled'\r\n  impact 0.8\r\n  desc 'This policy identifies Azure Key Vault instances for which audit logging is disabled.\r\n  As a best practice, enable audit event logging for Key Vault instances to monitor how\r\n  and when your key vaults are accessed, and by whom.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_monitor_diagnostic_setting\" \"example_keyvault_log\" {\r\n    ...\r\n    target_resource_id = <your key vault id>\r\n    log {\r\n      category = \"AuditEvent\"\r\n      enabled  = true\r\n      ...\r\n    }\r\n    metric {\r\n      category = \"AllMetrics\"\r\n      enabled  = true\r\n      ...\r\n    }\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to Azure portal.\r\n  2.  Click on Resources > find or search for the resource in question.\r\n  3.  Click on the name of key vault you want to modify > click Diagnostic settings > click Add diagnostic setting.\r\n  4.  Enter a name for the log > Click Archive to a storage account > select the relevant storage account to save the logs to.\r\n  5.  Under Log, select AuditEvent > set the Retention time frame.\r\n  6.  Click on Save.\r\n  EOF\r\n\r\n  azure_key_vaults.ids.each do |id|\r\n    describe azure_key_vault(resource_id: id) do\r\n      it { should have_logging_enabled }\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/3_04.rb","line":1},"id":"3_04_key_vault_logging"},{"title":"3.6 - Azure Key Vault keys should have expiration date","desc":"Azure Key Vault enables to store and use cryptographic keys and secrets within\nthe Microsoft Azure environment. The expiration date SHOULD be set for keys and\nfor secrets within the vault to ensure that these credentials can´t be used unlimited.","descriptions":{"default":"Azure Key Vault enables to store and use cryptographic keys and secrets within\nthe Microsoft Azure environment. The expiration date SHOULD be set for keys and\nfor secrets within the vault to ensure that these credentials can´t be used unlimited."},"impact":0.5,"refs":[],"tags":{"sgs_control_hash":"8ae223887226fcbd01722703b9830046","sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","remediation_steps":"  1.  Log in to your Azure Subscription in which the alert exists.\n  2.  In the search bar, search for key vaults > click on the resource, for which there is an alert.\n  3.  On left hand side, under Settings, click Keys > Set appropriate expiration date for each key raising the alert.\n  4.  Click on Save.\n"},"code":"control '3_06_keyvault_key_expiration_enabled' do\r\n  title '3.6 - Azure Key Vault keys should have expiration date'\r\n  impact 0.5\r\n  tag sgs_control_hash: '8ae223887226fcbd01722703b9830046'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n\r\n  desc <<-DESC\r\n  Azure Key Vault enables to store and use cryptographic keys and secrets within\r\n  the Microsoft Azure environment. The expiration date SHOULD be set for keys and\r\n  for secrets within the vault to ensure that these credentials can´t be used unlimited.\r\n  DESC\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription in which the alert exists.\r\n  2.  In the search bar, search for key vaults > click on the resource, for which there is an alert.\r\n  3.  On left hand side, under Settings, click Keys > Set appropriate expiration date for each key raising the alert.\r\n  4.  Click on Save.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_key_vaults(resource_group: resource_group).names.each do |key_vault_name|\r\n      azure_key_vault_keys(key_vault_name).kids.each do |kid|\r\n        # kid url is https://VAULTNAME.vault.azure.net/keys/KEYNAME\r\n        # get the key name from the end of the URL\r\n        key = kid.split('/')[-1]\r\n        describe azure_key_vault_key(vault_name: key_vault_name, key_name: key) do\r\n          its('attributes.exp') { should_not eq nil }\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/3_06.rb","line":1},"id":"3_06_keyvault_key_expiration_enabled"},{"title":"3.6 - Azure Key Vault secrets should have expiration date","desc":"Azure Key Vault enables to store and use cryptographic keys and secrets within\nthe Microsoft Azure environment. The expiration date SHOULD be set for keys and\nfor secrets within the vault to ensure that these credentials can´t be used unlimited.","descriptions":{"default":"Azure Key Vault enables to store and use cryptographic keys and secrets within\nthe Microsoft Azure environment. The expiration date SHOULD be set for keys and\nfor secrets within the vault to ensure that these credentials can´t be used unlimited."},"impact":0.5,"refs":[],"tags":{"sgs_control_hash":"8ae223887226fcbd01722703b9830046","sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","remediation_steps":"  1.  Log in to your Azure Subscription in which the alert exists.\n  2.  In the search bar search for key vaults > click on the resource, for which there is an alert.\n  3.  On left hand side, under Settings, click Secrets > Set appropriate expiration date for each secret raising the alert.\n  4.  Click on Save.\n"},"code":"control '3_06_keyvault_secret_expiration_enabled' do\r\n  title '3.6 - Azure Key Vault secrets should have expiration date'\r\n  impact 0.5\r\n  tag sgs_control_hash: '8ae223887226fcbd01722703b9830046'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n\r\n  desc <<-DESC\r\n  Azure Key Vault enables to store and use cryptographic keys and secrets within\r\n  the Microsoft Azure environment. The expiration date SHOULD be set for keys and\r\n  for secrets within the vault to ensure that these credentials can´t be used unlimited.\r\n  DESC\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription in which the alert exists.\r\n  2.  In the search bar search for key vaults > click on the resource, for which there is an alert.\r\n  3.  On left hand side, under Settings, click Secrets > Set appropriate expiration date for each secret raising the alert.\r\n  4.  Click on Save.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_key_vaults(resource_group: resource_group).names.each do |key_vault_name|\r\n      azure_key_vault_secrets(key_vault_name).ids.each do |id|\r\n        # kid url is https://VAULTNAME.vault.azure.net/secrets/KEYNAME\r\n        # get the key name from the end of the URL\r\n        secret = id.split('/')[-1]\r\n        describe azure_key_vault_secret(vault_name: key_vault_name, secret_name: secret) do\r\n          its('attributes.exp') { should_not eq nil }\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/3_06.rb","line":34},"id":"3_06_keyvault_secret_expiration_enabled"},{"title":"4.1 - Azure SQL databases must have data encryption enabled ","desc":"Transparent data encryption protects Azure database against malicious activity. It performs real-time encryption and decryption of the database,\n  related reinforcements, and exchange log records without requiring any changes to the application. It encrypts the storage of the entire database by using a\n  symmetric key called the database encryption key.","descriptions":{"default":"Transparent data encryption protects Azure database against malicious activity. It performs real-time encryption and decryption of the database,\n  related reinforcements, and exchange log records without requiring any changes to the application. It encrypts the storage of the entire database by using a\n  symmetric key called the database encryption key."},"impact":0.8,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","remediation_steps":"  1.  Log in to your Azure Subscription in which the alert exists.\n  2.  In the search bar search for 'SQL databases' > click on the resource, for which there is an alert.\n  3.  On left hand side, under Security heading > click Transparent data encryption > switch Data encryption to ON.\n  4.  Click on Save.\n"},"code":"control '4_01_sql_database_encryption_enabled' do\r\n  title '4.1 - Azure SQL databases must have data encryption enabled '\r\n  impact 0.8\r\n  desc 'Transparent data encryption protects Azure database against malicious activity. It performs real-time encryption and decryption of the database,\r\n  related reinforcements, and exchange log records without requiring any changes to the application. It encrypts the storage of the entire database by using a\r\n  symmetric key called the database encryption key.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription in which the alert exists.\r\n  2.  In the search bar search for 'SQL databases' > click on the resource, for which there is an alert.\r\n  3.  On left hand side, under Security heading > click Transparent data encryption > switch Data encryption to ON.\r\n  4.  Click on Save.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_sql_servers(resource_group: resource_group).names.each do |sql_server|\r\n      azure_sql_databases(resource_group: resource_group, server_name: sql_server).names.each do |sql_database|\r\n        next if azure_sql_database(resource_group: resource_group, server_name: sql_server, name: sql_database).name == 'master'\r\n        describe azure_sql_database(resource_group: resource_group, server_name: sql_server, name: sql_database) do\r\n          its('encryption_settings.properties.state') { should cmp 'Enabled' }\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/4_01.rb","line":1},"id":"4_01_sql_database_encryption_enabled"},{"title":"4.1 - Azure PostgreSQL database server should have SSL connection enabled","desc":"This policy identifies PostgreSQL database servers for which SSL enforce status is disabled. Enabling SSL can prevent man in the middle attacks\n  by enabling encryption between the server and the application","descriptions":{"default":"This policy identifies PostgreSQL database servers for which SSL enforce status is disabled. Enabling SSL can prevent man in the middle attacks\n  by enabling encryption between the server and the application"},"impact":0.5,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_postgresql_server\" \"example_postresql_server\" {\n    ...\n    ssl_enforcement_enabled = true\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  1.  Log in to your Azure Subscription in which the alert exists.\n  2.  In the search bar search for Azure Database for PostgreSQL servers > click on the resource, for which there is an alert.\n  3.  Under the Settings, on left hand side, click on Connection security > Under SSL settings, set value for Enforce SSL connection to ENABLED.\n  4.  Click on Save.\n"},"code":"control '4_01_postgres_server_ssl' do\r\n  title '4.1 - Azure PostgreSQL database server should have SSL connection enabled'\r\n  impact 0.5\r\n  desc 'This policy identifies PostgreSQL database servers for which SSL enforce status is disabled. Enabling SSL can prevent man in the middle attacks\r\n  by enabling encryption between the server and the application'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_postgresql_server\" \"example_postresql_server\" {\r\n    ...\r\n    ssl_enforcement_enabled = true\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription in which the alert exists.\r\n  2.  In the search bar search for Azure Database for PostgreSQL servers > click on the resource, for which there is an alert.\r\n  3.  Under the Settings, on left hand side, click on Connection security > Under SSL settings, set value for Enforce SSL connection to ENABLED.\r\n  4.  Click on Save.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_postgresql_servers(resource_group: resource_group).names.each do |mysql_server|\r\n      describe azure_postgresql_server(resource_group: resource_group, name: mysql_server) do\r\n        its('properties.sslEnforcement') { should cmp 'Enabled' }\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/4_01.rb","line":28},"id":"4_01_postgres_server_ssl"},{"title":"5.1 - Azure storage account blob container must not be publicly accessible","desc":"Storage accounts MUST only be configured as public if inevitable.","descriptions":{"default":"Storage accounts MUST only be configured as public if inevitable."},"impact":0.8,"refs":[],"tags":{"sgs_control_hash":"8ae223887226fcbd01722703b9830034","cis":"azure:3.6","level":1,"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_storage_container\" \"example_container\" {\n    ...\n    container_access_type = \"private\"\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  1.  Log in to your Azure Subscription in which the alert exists.\n  2.  In the search bar search for Storage accounts > click on the resource, for which there is an alert.\n  3.  On left hand side, under Settings, click Configuration > Check Allow Blob public access to Disabled.\n  4.  On left hand side, under Data storage, click Containers > Ensure that the container for which alert is raised the value for Public access level parameter is Private.\n"},"code":"control '5_01_public_buckets_not_allowed' do\r\n  impact 0.8\r\n  title '5.1 - Azure storage account blob container must not be publicly accessible'\r\n  desc <<-DESC\r\n  Storage accounts MUST only be configured as public if inevitable.\r\n  DESC\r\n  tag sgs_control_hash: '8ae223887226fcbd01722703b9830034'\r\n  tag cis: 'azure:3.6'\r\n  tag level: 1\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_storage_container\" \"example_container\" {\r\n    ...\r\n    container_access_type = \"private\"\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription in which the alert exists.\r\n  2.  In the search bar search for Storage accounts > click on the resource, for which there is an alert.\r\n  3.  On left hand side, under Settings, click Configuration > Check Allow Blob public access to Disabled.\r\n  4.  On left hand side, under Data storage, click Containers > Ensure that the container for which alert is raised the value for Public access level parameter is Private.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_storage_accounts(resource_group: resource_group).table.entries.each do |storage_account|\r\n      next if storage_account[:tags].entries.include?([:'sec-by-def-public-storage-exception', 'enabled'])\r\n\r\n      azure_storage_account_blob_containers(resource_group: resource_group, storage_account_name: storage_account[:name]).table.entries.each do |storage_container|\r\n        describe.one do\r\n          describe \"Blob public access for #{storage_account[:name]} under the resource group #{resource_group}\" do\r\n            subject { storage_account[:properties][:allowBlobPublicAccess] }\r\n            it { should eq false }\r\n          end\r\n\r\n          describe \"PublicAccess attribute for storage container #{storage_container[:name]} attached to storage account #{storage_account[:name]} under the resource group #{resource_group}\" do\r\n            subject { storage_container[:properties][:publicAccess] }\r\n            it { should eq 'None' }\r\n          end\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/5_01.rb","line":1},"id":"5_01_public_buckets_not_allowed"},{"title":"5.2 - Azure Non-encrypted buckets are per default not allowed","desc":"Data, snapshots, and disk I/O MUST be encrypted using the customary AES-256 algorithm.\nAzure storage encryption offers a simple encryption solution for data without the need to build, maintain,\nand secure own key management infrastructure. Storage service encryption protects your data at rest.\nAzure Storage encrypts your data as its written in Azure datacenters, and automatically decrypts it for you as you access it.\nEvery block blob, append blob, or page blob that was written to Azure Storage after October 20, 2017 is encrypted","descriptions":{"default":"Data, snapshots, and disk I/O MUST be encrypted using the customary AES-256 algorithm.\nAzure storage encryption offers a simple encryption solution for data without the need to build, maintain,\nand secure own key management infrastructure. Storage service encryption protects your data at rest.\nAzure Storage encrypts your data as its written in Azure datacenters, and automatically decrypts it for you as you access it.\nEvery block blob, append blob, or page blob that was written to Azure Storage after October 20, 2017 is encrypted"},"impact":0.8,"refs":[],"tags":{"sgs_control_hash":"8ae223887226fcbd01722703b9830031","sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c"},"code":"control '5_02_bucket_encryption_enabled' do\r\n  title '5.2 - Azure Non-encrypted buckets are per default not allowed'\r\n  impact 0.8\r\n  tag sgs_control_hash: '8ae223887226fcbd01722703b9830031'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n\r\n  desc <<-DESC\r\n  Data, snapshots, and disk I/O MUST be encrypted using the customary AES-256 algorithm.\r\n  Azure storage encryption offers a simple encryption solution for data without the need to build, maintain,\r\n  and secure own key management infrastructure. Storage service encryption protects your data at rest.\r\n  Azure Storage encrypts your data as its written in Azure datacenters, and automatically decrypts it for you as you access it.\r\n  Every block blob, append blob, or page blob that was written to Azure Storage after October 20, 2017 is encrypted\r\n  DESC\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_storage_accounts(resource_group: resource_group).table.entries.each do |storage_account|\r\n      next if storage_account[:tags].entries.include?([:'sec-by-def-encrypt-storage-exception', 'enabled'])\r\n      describe \"Encryption for storage account #{storage_account[:name]} attached to resource group #{resource_group} \" do\r\n        subject { storage_account[:properties][:encryption][:services][:blob][:enabled] }\r\n        it { should eq true }\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/5_02.rb","line":1},"id":"5_02_bucket_encryption_enabled"},{"title":"6.1 - Azure Virtual Network subnet must be configured with a Network Security Group","desc":"This policy identifies Azure Virtual Network (VNet) subnets that are not associated with a Network Security Group (NSG).\n  While binding an NSG to a network interface of a Virtual Machine (VM) enables fine-grained control to the VM, associating a NSG\n  to a subnet enables better control over network traffic to all resources within a subnet. As a best practice,\n  associate an NSG with a subnet so that you can protect your VMs on a subnet-level.","descriptions":{"default":"This policy identifies Azure Virtual Network (VNet) subnets that are not associated with a Network Security Group (NSG).\n  While binding an NSG to a network interface of a Virtual Machine (VM) enables fine-grained control to the VM, associating a NSG\n  to a subnet enables better control over network traffic to all resources within a subnet. As a best practice,\n  associate an NSG with a subnet so that you can protect your VMs on a subnet-level."},"impact":0.8,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_network_security_group\" \"example_nsg\" {\n    ...\n  }\n  resource \"azurerm_subnet_network_security_group_association\" \"example_nsg_association\" {\n    subnet_id  = <your subnet id>\n    network_security_group_id = <the network security group id>\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  1.  Log in to your Azure Portal.\n  2.  Locate the account > click on Resources.\n  3.  Select the virtual network you need to modify.\n  4.  Click on Subnets > select the subnet you need to change.\n  5.  Click on Network security group > Select the Network security group you want to be linked with the subnet.\n  6.  Click on Save.\n"},"code":"control '6_01_subnets_associated_with_network_security_group' do\r\n  title '6.1 - Azure Virtual Network subnet must be configured with a Network Security Group'\r\n  impact 0.8\r\n  desc 'This policy identifies Azure Virtual Network (VNet) subnets that are not associated with a Network Security Group (NSG).\r\n  While binding an NSG to a network interface of a Virtual Machine (VM) enables fine-grained control to the VM, associating a NSG\r\n  to a subnet enables better control over network traffic to all resources within a subnet. As a best practice,\r\n  associate an NSG with a subnet so that you can protect your VMs on a subnet-level.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_network_security_group\" \"example_nsg\" {\r\n    ...\r\n  }\r\n  resource \"azurerm_subnet_network_security_group_association\" \"example_nsg_association\" {\r\n    subnet_id  = <your subnet id>\r\n    network_security_group_id = <the network security group id>\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Portal.\r\n  2.  Locate the account > click on Resources.\r\n  3.  Select the virtual network you need to modify.\r\n  4.  Click on Subnets > select the subnet you need to change.\r\n  5.  Click on Network security group > Select the Network security group you want to be linked with the subnet.\r\n  6.  Click on Save.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_virtual_networks(resource_group: resource_group).names.each do |azure_vnet|\r\n      next if (/vnet-beachhead/).match(azure_vnet) ||\r\n              (/SAPCAL/).match(azure_vnet)\r\n      azure_subnets(resource_group: resource_group, vnet: azure_vnet).names.each do |azure_subnet|\r\n        subnet = azure_subnet(resource_group: resource_group, vnet: azure_vnet, name: azure_subnet)\r\n        next if (/GatewaySubnet/).match(subnet.name) ||\r\n                (/AzureFirewallSubnet/).match(subnet.name) ||\r\n                (/NetAppFilesSubnet/).match(subnet.name) ||\r\n                (/sn-s4-azr/).match(subnet.name) ||\r\n                subnet.properties.delegations.count > 0\r\n        describe azure_subnet(resource_group: resource_group, vnet: azure_vnet, name: azure_subnet) do\r\n          its('properties.networkSecurityGroup.id') { should_not be_nil }\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/6_01.rb","line":1},"id":"6_01_subnets_associated_with_network_security_group"},{"title":"6.1.1 - MS Azure Network Security Group must restrict traffic to DB ports from internet","desc":"This policy detects any NSG rule that allows traffic on\n  blocklisted DB ports (1433,1434,1521,3306,4333,5432,27017) from the internet.\n  Review your list of NSG rules to ensure that your resources are not exposed.","descriptions":{"default":"This policy detects any NSG rule that allows traffic on\n  blocklisted DB ports (1433,1434,1521,3306,4333,5432,27017) from the internet.\n  Review your list of NSG rules to ensure that your resources are not exposed."},"impact":0.8,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_network_security_rule\" \"example_security_rule\" {\n    ...\n    direction                   = 'Inbound'\n    source_port_range           = <list of required ports>\n    source_address_prefix       = <limited list of IPs or VirtualNetwork>\n    resource_group_name         = <your resource group>\n    network_security_group_name = <your security group>\n    ...\n  }\n","tested_tf_version":"1.0.11","terraform_remediation_note":"Ingress on the listed ports should only be allowed for a limited list of sources, and only when required","remediation_steps":"  1.  Log in to your Azure Subscription, in which the alert exists.\n  2.  In the search bar search for Network security groups > click on the resource, for which there is an alert.\n  3.  On left hand side, under Settings, click Inbound security rules > find the rule(s) that has any of the DB ports listed under the Port field and Source as Internet > select that rule and change Source of that particular rule, which exposes any of the DB ports to something other than Internet.\n  4.  Click on Save.\n"},"code":"control '6_01_01_db_ports' do\r\n  title '6.1.1 - MS Azure Network Security Group must restrict traffic to DB ports from internet'\r\n  impact 0.8\r\n  desc 'This policy detects any NSG rule that allows traffic on\r\n  blocklisted DB ports (1433,1434,1521,3306,4333,5432,27017) from the internet.\r\n  Review your list of NSG rules to ensure that your resources are not exposed.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_network_security_rule\" \"example_security_rule\" {\r\n    ...\r\n    direction                   = 'Inbound'\r\n    source_port_range           = <list of required ports>\r\n    source_address_prefix       = <limited list of IPs or VirtualNetwork>\r\n    resource_group_name         = <your resource group>\r\n    network_security_group_name = <your security group>\r\n    ...\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n  tag terraform_remediation_note: 'Ingress on the listed ports should only be allowed for a limited list of sources, and only when required'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription, in which the alert exists.\r\n  2.  In the search bar search for Network security groups > click on the resource, for which there is an alert.\r\n  3.  On left hand side, under Settings, click Inbound security rules > find the rule(s) that has any of the DB ports listed under the Port field and Source as Internet > select that rule and change Source of that particular rule, which exposes any of the DB ports to something other than Internet.\r\n  4.  Click on Save.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_network_security_groups(resource_group: resource_group).names.each do |sg_name|\r\n      nsg = azure_network_security_group(resource_group: resource_group, name: sg_name)\r\n      next if nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'MySQL') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'MSSQL') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'OracleSQL') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'MongoDB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL, MySQL') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL, MSSQL') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL, OracleSQL') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL, MongoDB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'MySQL, MSSQL') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'MySQL, OracleSQL') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'MySQL, MongoDB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'MSSQL, OracleSQL') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'MSSQL, MongoDB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'OracleSQL, MongoDB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL, MySQL, MSSQL') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL, MySQL, OracleSQL') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL, MySQL, MongoDB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL, MSSQL, OracleSQL') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL, MSSQL, MongoDB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL, OracleSQL, MongoDB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'MySQL, MSSQL, OracleSQL') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'MySQL, MSSQL, MongoDB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'MySQL, OracleSQL, MongoDB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'MSSQL, OracleSQL, MongoDB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL, MySQL, MSSQL, OracleSQL') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL, MySQL, MSSQL, MongoDB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL, MySQL, MSSQL, MongoDB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL, MSSQL, OracleSQL, MongoDB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'MySQL, MSSQL, OracleSQL, MongoDB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'PostgreSQL, MySQL, MSSQL, OracleSQL, MongoDB')\r\n\r\n      describe azure_network_security_group(resource_group: resource_group, name: sg_name) do\r\n        %w(5432 3306 4333 1521 27017 1433 1434).each do |db_port|\r\n          it { should_not allow_port_from_internet(db_port) }\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/6_01_01.rb","line":1},"id":"6_01_01_db_ports"},{"title":"6.1.2 - MS Azure Network Security Group must restrict traffic to Admin ports from internet ","desc":"This policy detects any NSG rule that allows traffic on blocklisted Admin ports\n  (22,135,514,3389,5500,5900) from the internet.\n  Review your list of NSG rules to ensure that your resources are not exposed.","descriptions":{"default":"This policy detects any NSG rule that allows traffic on blocklisted Admin ports\n  (22,135,514,3389,5500,5900) from the internet.\n  Review your list of NSG rules to ensure that your resources are not exposed."},"impact":0.8,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_network_security_rule\" \"example_security_rule\" {\n    ...\n    direction                   = 'Inbound'\n    source_port_range           = <list of required ports>\n    source_address_prefix       = <limited list of IPs or VirtualNetwork>\n    resource_group_name         = <your resource group>\n    network_security_group_name = <your security group>\n    ...\n  }\n","tested_tf_version":"1.0.11","terraform_remediation_note":"Ingress on the listed ports should only be allowed for a limited list of sources, and only when required","remediation_steps":"  1. Log in to your Azure Subscription in which the alert exists.\n  2. In the search bar, search for Network security groups > click on the resource, for which there is an alert.\n  3. On left hand side, under Settings, click Inbound security rules > find the rule(s) that has any of the admin ports listed under Port field and Source as Internet > Select that rule and change Source of that particular rule, which exposes any of the Admin ports to something other than Internet.\n  4. Click on Save.\n"},"code":"control '6_01_02_admin_ports' do\r\n  title '6.1.2 - MS Azure Network Security Group must restrict traffic to Admin ports from internet '\r\n  impact 0.8\r\n  desc 'This policy detects any NSG rule that allows traffic on blocklisted Admin ports\r\n  (22,135,514,3389,5500,5900) from the internet.\r\n  Review your list of NSG rules to ensure that your resources are not exposed.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_network_security_rule\" \"example_security_rule\" {\r\n    ...\r\n    direction                   = 'Inbound'\r\n    source_port_range           = <list of required ports>\r\n    source_address_prefix       = <limited list of IPs or VirtualNetwork>\r\n    resource_group_name         = <your resource group>\r\n    network_security_group_name = <your security group>\r\n    ...\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n  tag terraform_remediation_note: 'Ingress on the listed ports should only be allowed for a limited list of sources, and only when required'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1. Log in to your Azure Subscription in which the alert exists.\r\n  2. In the search bar, search for Network security groups > click on the resource, for which there is an alert.\r\n  3. On left hand side, under Settings, click Inbound security rules > find the rule(s) that has any of the admin ports listed under Port field and Source as Internet > Select that rule and change Source of that particular rule, which exposes any of the Admin ports to something other than Internet.\r\n  4. Click on Save.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_network_security_groups(resource_group: resource_group).names.each do |sg_name|\r\n      nsg = azure_network_security_group(resource_group: resource_group, name: sg_name)\r\n      next if nsg.tags.include?('sec-by-def-network-exception' => 'SSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'RDP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'VNC') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'RPC') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'RSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SSH, RDP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SSH, VNC') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SSH, RPC') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SSH, RSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'RDP, VNC') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'RDP, RPC') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'RDP, RSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'VNC, RPC') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'VNC, RSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'RPC, RSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SSH, RDP, VNC') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SSH, RDP, RPC') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SSH, RDP, RSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SSH, VNC, RPC') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SSH, VNC, RSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SSH, RPC, RSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'RDP, VNC, RPC') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'RDP, VNC, RSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'RDP, RPC, RSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'VNC, RPC, RSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SSH, RDP, VNC, RPC') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SSH, RDP, VNC, RSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SSH, RDP, VNC, RSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SSH, VNC, RPC, RSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'RDP, VNC, RPC, RSH') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SSH, RDP, VNC, RPC, RSH')\r\n      describe azure_network_security_group(resource_group: resource_group, name: sg_name) do\r\n        %w(3389 22 5500 5900 135 514).each do |admin_port|\r\n          it { should_not allow_port_from_internet(admin_port) }\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/6_01_02.rb","line":1},"id":"6_01_02_admin_ports"},{"title":"6.1.3 - MS Azure Network Security Group should restrict traffic to Infrastructure ports from internet","desc":"This policy detects any NSG rule that allows traffic on blocklisted infrastructure ports\n  (25,53,67,68,110,162,161) from the internet.\n  Review your list of NSG rules to ensure that your resources are not exposed","descriptions":{"default":"This policy detects any NSG rule that allows traffic on blocklisted infrastructure ports\n  (25,53,67,68,110,162,161) from the internet.\n  Review your list of NSG rules to ensure that your resources are not exposed"},"impact":0.5,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_network_security_rule\" \"example_security_rule\" {\n    ...\n    direction                   = 'Inbound'\n    source_port_range           = <list of required ports>\n    source_address_prefix       = <limited list of IPs or VirtualNetwork>\n    resource_group_name         = <your resource group>\n    network_security_group_name = <your security group>\n    ...\n  }\n","tested_tf_version":"1.0.11","terraform_remediation_note":"Ingress on the listed ports should only be allowed for a limited list of sources, and only when required","remediation_steps":"  1. Log in to your Azure Subscription in which the alert exists.\n  2. In the search bar, search for Network security groups > click on the resource, for which there is an alert.\n  3. Navigate to the inbound rules > Click on Edit Inbound rules > Ensure CIDR block 0.0.0.0/0 or ::/0 is not bound to any of the following ports: 53, 110, 25, 67, 68, 161, 162 OR any ports mentioned in [6.1.3 Firewall Rules for Infrastructure ports] SGS hardening guidelines > Save rules.\n"},"code":"control '6_01_03_infra_ports' do\r\n  title '6.1.3 - MS Azure Network Security Group should restrict traffic to Infrastructure ports from internet'\r\n  impact 0.5\r\n  desc 'This policy detects any NSG rule that allows traffic on blocklisted infrastructure ports\r\n  (25,53,67,68,110,162,161) from the internet.\r\n  Review your list of NSG rules to ensure that your resources are not exposed'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_network_security_rule\" \"example_security_rule\" {\r\n    ...\r\n    direction                   = 'Inbound'\r\n    source_port_range           = <list of required ports>\r\n    source_address_prefix       = <limited list of IPs or VirtualNetwork>\r\n    resource_group_name         = <your resource group>\r\n    network_security_group_name = <your security group>\r\n    ...\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n  tag terraform_remediation_note: 'Ingress on the listed ports should only be allowed for a limited list of sources, and only when required'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1. Log in to your Azure Subscription in which the alert exists.\r\n  2. In the search bar, search for Network security groups > click on the resource, for which there is an alert.\r\n  3. Navigate to the inbound rules > Click on Edit Inbound rules > Ensure CIDR block 0.0.0.0/0 or ::/0 is not bound to any of the following ports: 53, 110, 25, 67, 68, 161, 162 OR any ports mentioned in [6.1.3 Firewall Rules for Infrastructure ports] SGS hardening guidelines > Save rules.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_network_security_groups(resource_group: resource_group).names.each do |sg_name|\r\n      nsg = azure_network_security_group(resource_group: resource_group, name: sg_name)\r\n      next if nsg.tags.include?('sec-by-def-network-exception' => 'DNS') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'HTTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'POP3') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SMTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DHCP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, HTTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, POP3') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, SMTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, DHCP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'HTTP, POP3') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'HTTP, SMTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'HTTP, DHCP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'HTTP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'POP3, SMTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'POP3, DHCP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'POP3, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SMPT, DHCP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SMTP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DHCP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, HTTP, POP3') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, HTTP, SMTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, HTTP, DHCP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, HTTP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, POP3, SMTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, POP3, DHCP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, POP3, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, SMTP, DHCP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, SMTP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, DHCP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'HTTP, POP3, SMTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'HTTP, POP3, DHCP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'HTTP, POP3, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'HTTP, SMTP, DHCP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'HTTP, SMTP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'HTTP, DHCP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'POP3, SMTP, DHCP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'POP3, SMTP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'POP3, DHCP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SMTP, DHCP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, HTTP, POP3, SMTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, HTTP, POP3, DHCP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, HTTP, POP3, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, POP3, SMTP, DHCP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, POP3, SMTP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, SMTP, DHCP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'HTTP, POP3, SMTP, DHCP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'HTTP, POP3, SMTP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'HTTP, SMTP, DHCP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'POP3, SMTP, DHCP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, HTTP, POP3, SMTP, DHCP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, HTTP, POP3, SMTP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, HTTP, POP3, DHCP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, HTTP, SMTP, DHCP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, POP3, SMTP, DHCP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'HTTP, POP3, SMTP, DHCP, SNMP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'DNS, HTTP, POP3, SMTP, DHCP, SNMP')\r\n      describe azure_network_security_group(resource_group: resource_group, name: sg_name) do\r\n        %w(53 110 25 67 68 161 162).each do |infra_port|\r\n          it { should_not allow_port_from_internet(infra_port) }\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/6_01_03.rb","line":1},"id":"6_01_03_infra_ports"},{"title":"6.1.4 - MS Azure Network Security Group should restrict file sharing ports from internet","desc":"This policy detects any NSG rule that allows traffic on blocklisted File sharing ports\n  (21,69,139,445) from the internet.\n  Review your list of NSG rules to ensure that your resources are not exposed.","descriptions":{"default":"This policy detects any NSG rule that allows traffic on blocklisted File sharing ports\n  (21,69,139,445) from the internet.\n  Review your list of NSG rules to ensure that your resources are not exposed."},"impact":0.5,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_network_security_rule\" \"example_security_rule\" {\n    ...\n    direction                   = 'Inbound'\n    source_port_range           = <list of required ports>\n    source_address_prefix       = <limited list of IPs or VirtualNetwork>\n    resource_group_name         = <your resource group>\n    network_security_group_name = <your security group>\n    ...\n  }\n","tested_tf_version":"1.0.11","terraform_remediation_note":"Ingress on the listed ports should only be allowed for a limited list of sources, and only when required","remediation_steps":"  1.  Log in to your Azure Subscription in which the alert exists.\n  2.  In the search bar search for Network security groups > click on the resource, for which there is an alert.\n  3.  On left hand side, under Settings, click Inbound security rules > Find the rule(s) that has any of the fileshare ports listed under Port field and Source as Internet > select that rule and change Source of that particular rule, which exposes any of the Fileshare ports to something other than Internet.\n  4.  Click on Save.\n"},"code":"control '6_01_04_fileshare_ports' do\r\n  title '6.1.4 - MS Azure Network Security Group should restrict file sharing ports from internet'\r\n  impact 0.5\r\n  desc 'This policy detects any NSG rule that allows traffic on blocklisted File sharing ports\r\n  (21,69,139,445) from the internet.\r\n  Review your list of NSG rules to ensure that your resources are not exposed.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_network_security_rule\" \"example_security_rule\" {\r\n    ...\r\n    direction                   = 'Inbound'\r\n    source_port_range           = <list of required ports>\r\n    source_address_prefix       = <limited list of IPs or VirtualNetwork>\r\n    resource_group_name         = <your resource group>\r\n    network_security_group_name = <your security group>\r\n    ...\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n  tag terraform_remediation_note: 'Ingress on the listed ports should only be allowed for a limited list of sources, and only when required'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription in which the alert exists.\r\n  2.  In the search bar search for Network security groups > click on the resource, for which there is an alert.\r\n  3.  On left hand side, under Settings, click Inbound security rules > Find the rule(s) that has any of the fileshare ports listed under Port field and Source as Internet > select that rule and change Source of that particular rule, which exposes any of the Fileshare ports to something other than Internet.\r\n  4.  Click on Save.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_network_security_groups(resource_group: resource_group).names.each do |sg_name|\r\n      nsg = azure_network_security_group(resource_group: resource_group, name: sg_name)\r\n      next if nsg.tags.include?('sec-by-def-network-exception' => 'NetBIOS') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SMB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'FTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'TFTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'NetBIOS, SMB') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'NetBIOS, FTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'NetBIOS, TFTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SMB, FTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SMB, TFTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'FTP, TFTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'NetBIOS, SMB, FTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'NetBIOS, SMB, TFTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'NetBIOS, FTP, TFTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'SMB, FTP, TFTP') ||\r\n              nsg.tags.include?('sec-by-def-network-exception' => 'NetBIOS, SMB, FTP, TFTP')\r\n      describe azure_network_security_group(resource_group: resource_group, name: sg_name) do\r\n        %w(139 445 21 69).each do |file_port|\r\n          it { should_not allow_port_from_internet(file_port) }\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/6_01_04.rb","line":1},"id":"6_01_04_fileshare_ports"},{"title":"6.1.5 - MS Azure Network Security Group must restrict traffic to Telnet port from internet","desc":"This policy detects any NSG rule that allows traffic on port 23 from the internet.\n  Review your list of NSG rules to ensure that your resources are not exposed.","descriptions":{"default":"This policy detects any NSG rule that allows traffic on port 23 from the internet.\n  Review your list of NSG rules to ensure that your resources are not exposed."},"impact":0.8,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_network_security_rule\" \"example_security_rule\" {\n    ...\n    direction                   = 'Inbound'\n    source_port_range           = <list of required ports>\n    source_address_prefix       = <limited list of IPs or VirtualNetwork>\n    resource_group_name         = <your resource group>\n    network_security_group_name = <your security group>\n    ...\n  }\n","tested_tf_version":"1.0.11","terraform_remediation_note":"Ingress on the listed ports should only be allowed for a limited list of sources, and only when required","remediation_steps":"  1. Log in to your Azure Subscription in which the alert exists.\n  2. In the search bar search for Network security groups > click on the resource, for which there is an alert.\n  3. On left hand side, under Settings, click Inbound security rules > find the rule that has Telnet port 23 listed under Port field and Source as Internet > select that rule and change Source of that particular rule, which exposes Telnet port 23 to something other than Internet.\n  4. Click on Save.\n"},"code":"control '6_01_05_telnet_ports' do\r\n  title '6.1.5 - MS Azure Network Security Group must restrict traffic to Telnet port from internet'\r\n  impact 0.8\r\n  desc 'This policy detects any NSG rule that allows traffic on port 23 from the internet.\r\n  Review your list of NSG rules to ensure that your resources are not exposed.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_network_security_rule\" \"example_security_rule\" {\r\n    ...\r\n    direction                   = 'Inbound'\r\n    source_port_range           = <list of required ports>\r\n    source_address_prefix       = <limited list of IPs or VirtualNetwork>\r\n    resource_group_name         = <your resource group>\r\n    network_security_group_name = <your security group>\r\n    ...\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n  tag terraform_remediation_note: 'Ingress on the listed ports should only be allowed for a limited list of sources, and only when required'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1. Log in to your Azure Subscription in which the alert exists.\r\n  2. In the search bar search for Network security groups > click on the resource, for which there is an alert.\r\n  3. On left hand side, under Settings, click Inbound security rules > find the rule that has Telnet port 23 listed under Port field and Source as Internet > select that rule and change Source of that particular rule, which exposes Telnet port 23 to something other than Internet.\r\n  4. Click on Save.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_network_security_groups(resource_group: resource_group).names.each do |sg_name|\r\n      nsg = azure_network_security_group(resource_group: resource_group, name: sg_name)\r\n      next if nsg.tags.include?('sec-by-def-network-exception' => 'Telnet')\r\n      describe azure_network_security_group(resource_group: resource_group, name: sg_name) do\r\n        it { should_not allow_port_from_internet('23') }\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/6_01_05.rb","line":1},"id":"6_01_05_telnet_ports"},{"title":"6.3 - Azure Application Gateway must not allow invalid TLS","desc":"Azure Application Gateway is a layer 7 Loadbalancer that distributes incoming traffic among healthy virtual machine instances.\nSSL policy MUST be configured to use TLS 1.2 or higher.","descriptions":{"default":"Azure Application Gateway is a layer 7 Loadbalancer that distributes incoming traffic among healthy virtual machine instances.\nSSL policy MUST be configured to use TLS 1.2 or higher."},"impact":0.8,"refs":[],"tags":{"sgs_control_hash":"8ae223887226fcbd01722703b9830022","sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_application_gateway\" \"example_gateway\" {\n    ...\n    ssl_policy {\n      # min_protocol_version = \"TLSv1_2\"\n      policy_name = \"AppGwSslPolicy20170401S\"\n      policy_type = \"Predefined\"\n    }\n  }\n","tested_tf_version":"1.0.11","terraform_remediation_note":"If a custom configuration is used instead of a predefined policy type, the minimum protocol version must be configured","remediation_steps":"  To set the SSL policy using the predefined policy, please run the following command:\n\n  az network application-gateway ssl-policy set -g <resource_group_name> --gateway-name <app_gateway_name> -n AppGwSslPolicy20170401S --policy-type Predefined\n\n  Refer to <https://docs.microsoft.com/en-us/azure/application-gateway/application-gateway-ssl-policy-overview> for more information and for a list of the available predefined policy.\n"},"code":"control '6_03_app_gateway_tls' do\r\n  impact 0.8\r\n  title '6.3 - Azure Application Gateway must not allow invalid TLS'\r\n  desc <<-DESC\r\n  Azure Application Gateway is a layer 7 Loadbalancer that distributes incoming traffic among healthy virtual machine instances.\r\n  SSL policy MUST be configured to use TLS 1.2 or higher.\r\n  DESC\r\n  tag sgs_control_hash: '8ae223887226fcbd01722703b9830022'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_application_gateway\" \"example_gateway\" {\r\n    ...\r\n    ssl_policy {\r\n      # min_protocol_version = \"TLSv1_2\"\r\n      policy_name = \"AppGwSslPolicy20170401S\"\r\n      policy_type = \"Predefined\"\r\n    }\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n  tag terraform_remediation_note: 'If a custom configuration is used instead of a predefined policy type, the minimum protocol version must be configured'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  To set the SSL policy using the predefined policy, please run the following command:\r\n\r\n  az network application-gateway ssl-policy set -g <resource_group_name> --gateway-name <app_gateway_name> -n AppGwSslPolicy20170401S --policy-type Predefined\r\n\r\n  Refer to <https://docs.microsoft.com/en-us/azure/application-gateway/application-gateway-ssl-policy-overview> for more information and for a list of the available predefined policy.\r\n  EOF\r\n\r\n  # Azure Application Gateways can have default, predefined or custom SSL policies\r\n  # https://docs.microsoft.com/en-us/azure/application-gateway/application-gateway-ssl-policy-overview\r\n  # They are defined for the entire application gateway, not per listener.\r\n  #\r\n  # Default policy is configured when sslPolicy does not exist in the properties collection\r\n  #\r\n  # Predefined names:\r\n  # AppGwSslPolicy20150501  (TLS v1.0 minimum)\r\n  # AppGwSslPolicy20170401  (TLS v1.1 minimum)\r\n  # AppGwSslPolicy20170401S (TLS v1.2 minimum) - Only permissible policy\r\n  #\r\n  # Custom policies can define minimum protocol versions and desired cipher suites\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_application_gateways(resource_group: resource_group).names.each do |lb_name|\r\n      describe.one do\r\n        describe azure_application_gateway(resource_group: resource_group, application_gateway_name: lb_name) do\r\n          its('properties.methods') { should include :sslPolicy }\r\n          its('properties.sslPolicy.policyType') { should eq 'Predefined' }\r\n          its('properties.sslPolicy.policyName') { should eq 'AppGwSslPolicy20170401S' }\r\n        end\r\n\r\n        describe azure_application_gateway(resource_group: resource_group, application_gateway_name: lb_name) do\r\n          its('properties.methods') { should include :sslPolicy }\r\n          its('properties.sslPolicy.policyType') { should eq 'Custom' }\r\n          its('properties.sslPolicy.minProtocolVersion') { should eq 'TLSv1_2' }\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/6_03.rb","line":1},"id":"6_03_app_gateway_tls"},{"title":"6.3 - Azure Application Gateway should have the Web application firewall (WAF) enabled","desc":"WAF is used to manage and protect web applications behind the application gateway from vulnerabilities and exploits.\n  This policy identifies the Azure Application Gateways that does not have WAF enabled","descriptions":{"default":"WAF is used to manage and protect web applications behind the application gateway from vulnerabilities and exploits.\n  This policy identifies the Azure Application Gateways that does not have WAF enabled"},"impact":0.5,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_application_gateway\" \"example_gateway\" {\n    ...\n    waf_configuration {\n      enabled           = true\n      ...\n    }\n  }\n","tested_tf_version":"1.0.11"},"code":"control '6_03_app_gateway_waf' do\r\n  title '6.3 - Azure Application Gateway should have the Web application firewall (WAF) enabled'\r\n  impact 0.5\r\n  desc 'WAF is used to manage and protect web applications behind the application gateway from vulnerabilities and exploits.\r\n  This policy identifies the Azure Application Gateways that does not have WAF enabled'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_application_gateway\" \"example_gateway\" {\r\n    ...\r\n    waf_configuration {\r\n      enabled           = true\r\n      ...\r\n    }\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_application_gateways(resource_group: resource_group).names.each do |lb_name|\r\n      describe azure_application_gateway(resource_group: resource_group, application_gateway_name: lb_name) do\r\n        its('properties.webApplicationFirewallConfiguration.enabled') { should eq true }\r\n        its('properties.firewallPolicy') { should_not be nil }\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/6_03.rb","line":63},"id":"6_03_app_gateway_waf"},{"title":"6.4 - Azure VPN must be configured with cryptographic algorithm","desc":"This control enforces that cryptographic algorithm should be configured for Azure VPNs. It is recommended to use custom IPsec/IKE policy with specific cryptographic algorithms and key strengths instead of Azure default policy sets. If cryptographic algorithms and parameters are not specified, Azure VPN gateways use a set of default protocols. It is secured to use custom policy sets and choose strong cryptography.","descriptions":{"default":"This control enforces that cryptographic algorithm should be configured for Azure VPNs. It is recommended to use custom IPsec/IKE policy with specific cryptographic algorithms and key strengths instead of Azure default policy sets. If cryptographic algorithms and parameters are not specified, Azure VPN gateways use a set of default protocols. It is secured to use custom policy sets and choose strong cryptography."},"impact":0.8,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_virtual_network_gateway_connection\" \"example_virtual_network_connection\" {\n    ...\n    ipsec_policy {\n     <ipsec configuration>\n    }\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  Refer to the following link from Microsoft Azure for guidance on how to setup your VPN connections using strong recommended cryptographic conditions: <https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-about-compliance-crypto#cryptographic-requirements>\n"},"code":"control '6_04_azure_vpn_cryptographic_algorithm' do\r\n  impact 0.8\r\n  title '6.4 - Azure VPN must be configured with cryptographic algorithm'\r\n  desc 'This control enforces that cryptographic algorithm should be configured for Azure VPNs. It is recommended to use custom IPsec/IKE policy with specific cryptographic algorithms and key strengths instead of Azure default policy sets. If cryptographic algorithms and parameters are not specified, Azure VPN gateways use a set of default protocols. It is secured to use custom policy sets and choose strong cryptography.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_virtual_network_gateway_connection\" \"example_virtual_network_connection\" {\r\n    ...\r\n    ipsec_policy {\r\n     <ipsec configuration>\r\n    }\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  Refer to the following link from Microsoft Azure for guidance on how to setup your VPN connections using strong recommended cryptographic conditions: <https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-about-compliance-crypto#cryptographic-requirements>\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_virtual_network_gateway_connections(resource_group: resource_group).names.each do |name|\r\n      connection_type = azure_virtual_network_gateway_connection(resource_group: resource_group, name: name)\r\n      next unless connection_type.properties.connectionType != 'ExpressRoute'\r\n\r\n      describe connection_type do\r\n        its('properties.ipsecPolicies') { should_not be_empty }\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/6_04.rb","line":1},"id":"6_04_azure_vpn_cryptographic_algorithm"},{"title":"6.4 Azure VPN default IPSec/IKE policies must not be used","desc":"The IKEv1 protocol is outdated and MUST NOT be used. Configure VPN connections with IKEv2 whenever possible. Azure default IPSec/IKE policies allow cryptographic algorithms that do not comply to SAP's security standards and MUST NOT be used.","descriptions":{"default":"The IKEv1 protocol is outdated and MUST NOT be used. Configure VPN connections with IKEv2 whenever possible. Azure default IPSec/IKE policies allow cryptographic algorithms that do not comply to SAP's security standards and MUST NOT be used."},"impact":0.8,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_virtual_network_gateway_connection\" \"example_virtual_network_connection\" {\n    ...\n    connection_protocol = \"IKEv2\"\n    ...\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  Refer to [this link](https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-about-compliance-crypto#cryptographic-requirements) from Microsoft Azure for guidance on how to setup your VPN connections using strong recommended cryptographic conditions\n"},"code":"control '6_04_azure_vpn_secure_configuration' do\r\n  impact 0.8\r\n  title '6.4 Azure VPN default IPSec/IKE policies must not be used'\r\n  desc 'The IKEv1 protocol is outdated and MUST NOT be used. Configure VPN connections with IKEv2 whenever possible. Azure default IPSec/IKE policies allow cryptographic algorithms that do not comply to SAP\\'s security standards and MUST NOT be used.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_virtual_network_gateway_connection\" \"example_virtual_network_connection\" {\r\n    ...\r\n    connection_protocol = \"IKEv2\"\r\n    ...\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  Refer to [this link](https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-about-compliance-crypto#cryptographic-requirements) from Microsoft Azure for guidance on how to setup your VPN connections using strong recommended cryptographic conditions\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_virtual_network_gateway_connections(resource_group: resource_group).names.each do |name|\r\n      gateway_connection = azure_virtual_network_gateway_connection(resource_group: resource_group, name: name)\r\n      next unless gateway_connection.properties.connectionType == 'IPsec'\r\n\r\n      describe gateway_connection do\r\n        its('connectionProtocol') { should_not eq 'IKEv1' }\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/6_04.rb","line":32},"id":"6_04_azure_vpn_secure_configuration"},{"title":"7.7 - Azure AKS role-based access control (RBAC) must be enabled","desc":"To provide granular filtering of the actions that users can perform, Kubernetes uses role-based access controls (RBAC). This control mechanism lets you\n  assign users, or groups of users, permission to do things like create or modify resources, or view logs from running application workloads. These permissions\n  can be scoped to a single namespace, or granted across the entire AKS cluster. This policy checks your AKS cluster RBAC setting and alerts if disabled.","descriptions":{"default":"To provide granular filtering of the actions that users can perform, Kubernetes uses role-based access controls (RBAC). This control mechanism lets you\n  assign users, or groups of users, permission to do things like create or modify resources, or view logs from running application workloads. These permissions\n  can be scoped to a single namespace, or granted across the entire AKS cluster. This policy checks your AKS cluster RBAC setting and alerts if disabled."},"impact":0.8,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"  resource \"azurerm_kubernetes_cluster\" \"example_aks_cluster\" {\n    ...\n    role_based_access_control {\n      enabled = true\n    }\n  }\n","tested_tf_version":"1.0.11","remediation_steps":"  1.  Log in to your Azure Subscription in which the alert exists.\n  2.  In the search bar, search for Kubernetes services > click on the resource, for which there is an alert.\n  3.  Under the Settings heading, on left hand side, click on Cluster configuration > Under Kubernetes authentication and authorization, verify if Role-based access control (RBAC) is set to Enabled.\n  If this setting does not exist, create a new cluster with this updated configuration or use Azure cli to update it in existing cluster.\n"},"code":"control '7_07_aks_rbac_enabled' do\r\n  title '7.7 - Azure AKS role-based access control (RBAC) must be enabled'\r\n  impact 0.8\r\n  desc 'To provide granular filtering of the actions that users can perform, Kubernetes uses role-based access controls (RBAC). This control mechanism lets you\r\n  assign users, or groups of users, permission to do things like create or modify resources, or view logs from running application workloads. These permissions\r\n  can be scoped to a single namespace, or granted across the entire AKS cluster. This policy checks your AKS cluster RBAC setting and alerts if disabled.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n  resource \"azurerm_kubernetes_cluster\" \"example_aks_cluster\" {\r\n    ...\r\n    role_based_access_control {\r\n      enabled = true\r\n    }\r\n  }\r\n  EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n  1.  Log in to your Azure Subscription in which the alert exists.\r\n  2.  In the search bar, search for Kubernetes services > click on the resource, for which there is an alert.\r\n  3.  Under the Settings heading, on left hand side, click on Cluster configuration > Under Kubernetes authentication and authorization, verify if Role-based access control (RBAC) is set to Enabled.\r\n  If this setting does not exist, create a new cluster with this updated configuration or use Azure cli to update it in existing cluster.\r\n  EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_aks_clusters(resource_group: resource_group).names.each do |aks_cluster_name|\r\n      describe azure_aks_cluster(name: aks_cluster_name, resource_group: resource_group) do\r\n        its('properties.enableRBAC') { should eq true }\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/7_07.rb","line":1},"id":"7_07_aks_rbac_enabled"},{"title":"8.1 - Supported versions of TLS and redis must be used","desc":"As of Q1 2022 Redis version 6 MUST be used over Redis version 4 which is already near its EoL (End of Life).\n    Encryption in-transit (TLS) MUST be activated. The TLS version MUST be at least 1.2.","descriptions":{"default":"As of Q1 2022 Redis version 6 MUST be used over Redis version 4 which is already near its EoL (End of Life).\n    Encryption in-transit (TLS) MUST be activated. The TLS version MUST be at least 1.2."},"impact":0.8,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"    resource \"azurerm_redis_cache\" \"example_redis_cache\" {\n      minimum_tls_version = \"1.2\" (or a higher version)\n      redis_version       = 6 (or a higher version)\n    }\n","tested_tf_version":"1.0.11","remediation_steps":"    1.  Log in to your Azure Subscription in which the alert exists.\n    2.  In the search bar search, for Azure Cache for Redis > click on the resource, for which there is an alert.\n    3.  Under the Settings heading, on left hand side, click on Advanced settings.\n    4.  If your cache instance is eligible to be upgraded, you should see a blue banner announcing that your cache can be upgraded to a newer Redis instance. If you click on it, select the button saying yes you want to upgrade. This is not reversible, so ensure that this is thoroughly tested in lower environments where applicable.\n    5.  Set the minimum TLS version to 1.2 or higher.\n    6. Click Save.\n"},"code":"control '8_01_caching_redis_and_tls_versioning' do\r\n  title '8.1 - Supported versions of TLS and redis must be used'\r\n  impact 0.8\r\n  desc 'As of Q1 2022 Redis version 6 MUST be used over Redis version 4 which is already near its EoL (End of Life).\r\n    Encryption in-transit (TLS) MUST be activated. The TLS version MUST be at least 1.2.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n    resource \"azurerm_redis_cache\" \"example_redis_cache\" {\r\n      minimum_tls_version = \"1.2\" (or a higher version)\r\n      redis_version       = 6 (or a higher version)\r\n    }\r\n    EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n    1.  Log in to your Azure Subscription in which the alert exists.\r\n    2.  In the search bar search, for Azure Cache for Redis > click on the resource, for which there is an alert.\r\n    3.  Under the Settings heading, on left hand side, click on Advanced settings.\r\n    4.  If your cache instance is eligible to be upgraded, you should see a blue banner announcing that your cache can be upgraded to a newer Redis instance. If you click on it, select the button saying yes you want to upgrade. This is not reversible, so ensure that this is thoroughly tested in lower environments where applicable.\r\n    5.  Set the minimum TLS version to 1.2 or higher.\r\n    6. Click Save.\r\n    EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_redis_caches(resource_group: resource_group).entries.each do |redis_cache|\r\n      describe \"Azure redis cache #{redis_cache[:name]} in resource group #{resource_group} \" do\r\n        subject { redis_cache }\r\n        its('redis_version') { should cmp >= '6.0.0' }\r\n      end\r\n      describe \"Azure redis cache #{redis_cache[:name]} in resource group #{resource_group} minimum TLS version\" do\r\n        subject { redis_cache[:properties][:minimumTlsVersion] }\r\n        it { should cmp >= '1.2' }\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/8_01.rb","line":1},"id":"8_01_caching_redis_and_tls_versioning"},{"title":"8.1 - Caching services should have secure network configurations and redundant setup","desc":"The firewall rules SHOULD allow access only for the necessary communication partners and leverage private endpoint or networks. The cache should not have non-ssl ports available.\n    It is important that the caching cluster is setup in an redundant (high available) way using at least the STANDARD tier level of the service. The BASIC tier SHOULD NOT be used because it does not offer an SLA or replication.","descriptions":{"default":"The firewall rules SHOULD allow access only for the necessary communication partners and leverage private endpoint or networks. The cache should not have non-ssl ports available.\n    It is important that the caching cluster is setup in an redundant (high available) way using at least the STANDARD tier level of the service. The BASIC tier SHOULD NOT be used because it does not offer an SLA or replication."},"impact":0.5,"refs":[],"tags":{"sgs_wiki_url":"https://wiki.wdf.sap.corp/wiki/x/Ckc3c","terraform_remediation":"    resource \"azurerm_redis_cache\" \"example_redis_cache\" {\n      family              = \"C\"\n      sku_name            = \"Standard\" or \"Premium\"\n      enable_non_ssl_port = false\n      public_network_access_enabled = false\n    }\n","tested_tf_version":"1.0.11","remediation_steps":"    1.  Log in to your Azure Subscription in which the alert exists.\n    2.  In the search bar search, for Azure Cache for Redis > click on the resource, for which there is an alert.\n    3.  Under the Settings heading, on left hand side, click on Advanced settings.\n    5.  Select Allow access only via SSL and turn Non-SSL port to disabled.\n    6.  Under the Settings heading, on left hand side, click on Scale. If not set, choose either a standard or premium tier.\n"},"code":"control '8_01_caching_network_and_availability' do\r\n  title '8.1 - Caching services should have secure network configurations and redundant setup'\r\n  impact 0.5\r\n  desc 'The firewall rules SHOULD allow access only for the necessary communication partners and leverage private endpoint or networks. The cache should not have non-ssl ports available.\r\n    It is important that the caching cluster is setup in an redundant (high available) way using at least the STANDARD tier level of the service. The BASIC tier SHOULD NOT be used because it does not offer an SLA or replication.'\r\n  tag sgs_wiki_url: 'https://wiki.wdf.sap.corp/wiki/x/Ckc3c'\r\n  tag terraform_remediation: <<-EOF\r\n    resource \"azurerm_redis_cache\" \"example_redis_cache\" {\r\n      family              = \"C\"\r\n      sku_name            = \"Standard\" or \"Premium\"\r\n      enable_non_ssl_port = false\r\n      public_network_access_enabled = false\r\n    }\r\n    EOF\r\n  tag tested_tf_version: '1.0.11'\r\n\r\n  tag remediation_steps: <<-EOF\r\n    1.  Log in to your Azure Subscription in which the alert exists.\r\n    2.  In the search bar search, for Azure Cache for Redis > click on the resource, for which there is an alert.\r\n    3.  Under the Settings heading, on left hand side, click on Advanced settings.\r\n    5.  Select Allow access only via SSL and turn Non-SSL port to disabled.\r\n    6.  Under the Settings heading, on left hand side, click on Scale. If not set, choose either a standard or premium tier.\r\n    EOF\r\n\r\n  azure_resource_groups.names.each do |resource_group|\r\n    azure_redis_caches(resource_group: resource_group).entries.each do |redis_cache|\r\n      describe \"Azure redis cache #{redis_cache[:name]} in resource group #{resource_group} \" do\r\n        subject { redis_cache }\r\n        its('sku_name')              { should_not cmp 'Basic' }\r\n        its('enable_non_ssl_port')   { should be false }\r\n        its('public_network_access') { should cmp 'Disabled' }\r\n      end\r\n    end\r\n  end\r\nend\r\n","source_location":{"ref":"./controls/8_01.rb","line":38},"id":"8_01_caching_network_and_availability"}],"groups":[{"title":null,"controls":["2_02_subscriptions_roles_overly_permissive"],"id":"controls/2_02.rb"},{"title":null,"controls":["3_02_storage_account_queues_logging","3_02_storage_account_blobs_logging","3_02_storage_account_tables_logging"],"id":"controls/3_02.rb"},{"title":null,"controls":["3_03_sql_auditing_enablement","3_03_sql_auditing_retention","3_03_sql_threat_detection_enablement_misconfigured","3_03_postgres_server_log_checkpoints","3_03_postgres_server_log_disconnections","3_03_postgres_server_log_duration","3_03_postgres_server_log_connections"],"id":"controls/3_03.rb"},{"title":null,"controls":["3_04_key_vault_logging"],"id":"controls/3_04.rb"},{"title":null,"controls":["3_06_keyvault_key_expiration_enabled","3_06_keyvault_secret_expiration_enabled"],"id":"controls/3_06.rb"},{"title":null,"controls":["4_01_sql_database_encryption_enabled","4_01_postgres_server_ssl"],"id":"controls/4_01.rb"},{"title":null,"controls":["5_01_public_buckets_not_allowed"],"id":"controls/5_01.rb"},{"title":null,"controls":["5_02_bucket_encryption_enabled"],"id":"controls/5_02.rb"},{"title":null,"controls":["6_01_subnets_associated_with_network_security_group"],"id":"controls/6_01.rb"},{"title":null,"controls":["6_01_01_db_ports"],"id":"controls/6_01_01.rb"},{"title":null,"controls":["6_01_02_admin_ports"],"id":"controls/6_01_02.rb"},{"title":null,"controls":["6_01_03_infra_ports"],"id":"controls/6_01_03.rb"},{"title":null,"controls":["6_01_04_fileshare_ports"],"id":"controls/6_01_04.rb"},{"title":null,"controls":["6_01_05_telnet_ports"],"id":"controls/6_01_05.rb"},{"title":null,"controls":["6_03_app_gateway_tls","6_03_app_gateway_waf"],"id":"controls/6_03.rb"},{"title":null,"controls":["6_04_azure_vpn_cryptographic_algorithm","6_04_azure_vpn_secure_configuration"],"id":"controls/6_04.rb"},{"title":null,"controls":["7_07_aks_rbac_enabled"],"id":"controls/7_07.rb"},{"title":null,"controls":["8_01_caching_redis_and_tls_versioning","8_01_caching_network_and_availability"],"id":"controls/8_01.rb"}],"inputs":[],"sha256":"7ce697adaa62fc53a3b94a6e6bcf5b196ba38dc6cb62c0f665dbf03079df507f","status_message":"","status":"loaded","generator":{"name":"inspec","version":"4.56.17"}}
